<?xml version="1.0"?>
<launch>
  <!-- 
    This launch files basically only remaps GT transforms to other names (map, odom, robot) by publishing identity transforms.
    When using ground truth localization, map and odom frames will always coincide.

    Note that this setup changes the usual setup of localization TFs in a way that is transparent to algorithms that request transforms:
      * Usual setup with "real" localization: map->odom->robot, where none of these TFs is the identity transform -I-> for long.
      * We get the gt transform via map_gt->robot_gt (bridged from simulation)
      * We use identity TFs, which basically behave like TF frame aliases, to make using gt localization transparent to other modules.
        * map-I->map_gt: map shall coincide with map_gt.
        * robot_gt-I->robot: robot shall coincide with robot_gt.
        * map-I->odom: Map and odom will coincide because we have perfect localization.
        * odom->robot will *not* be published, otherwise, two frames would have the same child (i.e. odom->robot, robot_gt->robot)

    Resulting TF (sub-)tree:
        map ====> map_gt
         |          |
         v          | GT trf from simulation
       odom         |
                    v
       robot <=== robot_gt
   -->
  <arg name="map_gt_frame_id" description="ID of the ground truth TF frame that represents the map" />
  <arg name="robot_gt_frame_id" description="ID of the ground truth TF frame that represents the robot" />

  <arg name="robot_frame_id" default="base_link" description="ID of the TF frame that represents the robot" />
  <arg name="odom_frame_id" default="odom" description="ID of the TF frame that represents the odometry origin" />
  <arg name="map_frame_id" default="map" description="ID of the TF frame that represents the map" />

  <node pkg="tf2_ros" exec="static_transform_publisher" name="pub_map_to_gt_map" args="--frame-id $(var map_frame_id) --child-frame-id $(var map_gt_frame_id)" />
  <node pkg="tf2_ros" exec="static_transform_publisher" name="pub_map_to_odom" args="--frame-id $(var map_frame_id) --child-frame-id $(var odom_frame_id)" />
  <node pkg="tf2_ros" exec="static_transform_publisher" name="pub_robot_gt_to_robot" args="--frame-id $(var robot_gt_frame_id) --child-frame-id $(var robot_frame_id)" />
</launch>